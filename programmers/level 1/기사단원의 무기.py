# 기사단원의 무기

def find_d(n):
  d = []
  for i in range(1, int(n**(1/2)) + 1):
      if (n % i == 0):
          d.append(i) 
          if (i**2) != n : 
              d.append(n // i)
  return d
              
def solution(number, limit, power):
    answer = 0
    wepons =[1]
    for i in range(2, number + 1):
      d_l = len(find_d(i))
      if d_l > limit:
        wepons.append(power)
        continue
      wepons.append(d_l)
    return sum(wepons)
# 테스트 1 〉	통과 (41.70ms, 10.2MB)
# 테스트 2 〉	통과 (12.16ms, 10.3MB)
# 테스트 3 〉	통과 (5.91ms, 10.2MB)
# 테스트 4 〉	통과 (9.29ms, 10.2MB)
# 테스트 5 〉	통과 (2.92ms, 10.3MB)
# 테스트 6 〉	통과 (45.55ms, 10.3MB)
# 테스트 7 〉	통과 (14.70ms, 10.3MB)
# 테스트 8 〉	통과 (4.85ms, 10.2MB)
# 테스트 9 〉	통과 (44.12ms, 10.4MB)
# 테스트 10 〉	통과 (3.49ms, 10.4MB)
# 테스트 11 〉	통과 (1048.74ms, 11MB)
# 테스트 12 〉	통과 (1092.28ms, 11.1MB)
# 테스트 13 〉	통과 (932.43ms, 10.9MB)
# 테스트 14 〉	통과 (944.01ms, 11MB)
# 테스트 15 〉	통과 (914.33ms, 10.9MB)
# 테스트 16 〉	통과 (1133.82ms, 11.1MB)
# 테스트 17 〉	통과 (0.00ms, 10.3MB)
# 테스트 18 〉	통과 (1013.83ms, 11MB)
# 테스트 19 〉	통과 (13.48ms, 10.4MB)
# 테스트 20 〉	통과 (7.99ms, 10.2MB)
# 테스트 21 〉	통과 (0.02ms, 10.3MB)
# 테스트 22 〉	통과 (0.02ms, 10.1MB)
# 테스트 23 〉	통과 (0.03ms, 10.4MB)
# 테스트 24 〉	통과 (956.74ms, 10.8MB)
# 테스트 25 〉	통과 (1031.85ms, 10.8MB)
# 테스트 26 〉	통과 (2.05ms, 10.3MB)
# 테스트 27 〉	통과 (2.65ms, 10.2MB)
  
# print(solution(5, 3, 2))
# print(solution(10, 3, 2))


# 다른 사람 풀이
def cf(n):
    a = []
    for i in range(1,int(n**0.5)+1):
        if n%i == 0:
            a.append(n//i) # n을 나눴을 때 0이 되는 수의 짝꿍
            a.append(i) # n을 나눴을 때 0이 되는 수
    return len(set(a)) # 2번 들어가는 수가 있어 set으로 중복을 없앤다.
  
def solution(number, limit, power):
    return sum([cf(i) if cf(i)<=limit else power for i in range(1,number+1)])
# 테스트 1 〉	통과 (75.06ms, 10.2MB)
# 테스트 2 〉	통과 (13.56ms, 10.2MB)
# 테스트 3 〉	통과 (5.21ms, 10.4MB)
# 테스트 4 〉	통과 (16.16ms, 10.2MB)
# 테스트 5 〉	통과 (4.13ms, 10.2MB)
# 테스트 6 〉	통과 (75.12ms, 10.2MB)
# 테스트 7 〉	통과 (12.46ms, 10.1MB)
# 테스트 8 〉	통과 (14.78ms, 10.4MB)
# 테스트 9 〉	통과 (67.92ms, 10.3MB)
# 테스트 10 〉	통과 (5.85ms, 10.3MB)
# 테스트 11 〉	통과 (1857.78ms, 11.2MB)
# 테스트 12 〉	통과 (1704.74ms, 11.1MB)
# 테스트 13 〉	통과 (1109.72ms, 11.1MB)
# 테스트 14 〉	통과 (1767.98ms, 11MB)
# 테스트 15 〉	통과 (2172.90ms, 11MB)
# 테스트 16 〉	통과 (1870.43ms, 11MB)
# 테스트 17 〉	통과 (0.01ms, 10.3MB)
# 테스트 18 〉	통과 (1075.45ms, 11MB)
# 테스트 19 〉	통과 (20.26ms, 10.3MB)
# 테스트 20 〉	통과 (11.07ms, 10.1MB)
# 테스트 21 〉	통과 (0.03ms, 10.2MB)
# 테스트 22 〉	통과 (0.03ms, 10.1MB)
# 테스트 23 〉	통과 (0.03ms, 10.1MB)
# 테스트 24 〉	통과 (2357.65ms, 10.8MB)
# 테스트 25 〉	통과 (2492.20ms, 11.1MB)
# 테스트 26 〉	통과 (3.32ms, 10.3MB)
# 테스트 27 〉	통과 (5.84ms, 10.4MB)


# 나는 2중 for문 돌렸을 때 시간초과로 통과 못했는데 다른 사람들은 통과한 사람이 있다. 대단..! 언제쯤 시간복잡도를.. 잘 계산해서... ㅠㅠ
# 왜 내 풀이가 시작이 덜 걸리는지도 모르겠당! ㅎㅎ 시간복잡도 계산 어떻게 하는거람! ㅎㅎ
