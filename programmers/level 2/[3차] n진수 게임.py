# 다른 사람 풀이 1
def solution(n, t, m, p): # n: 진수, t: 구할숫자개수, m: 참가인원, p: 내 순서
    answer = "0" # 구할숫자까지 숫자들을 더 할 예정
    notation = "0123456789ABCDEF" # 16진수 대비

    for num in range(1, m * t): # 참가인원에 구할 숫자만큼 반복문을 돌림
        result = ""
        while num > 0: # 여기서 진수 변환
            num, remainder = divmod(num, n) # 몫과 나머지를 구한다.
            result += notation[remainder] # result에 더해 진수 변환 중

        answer += result[::-1] # 뒤집어서 올바르게 진수 반환 한 걸 answer에 더함


    return answer[p-1::m][:t] # answer[첫 내 순서의 숫자부터::참가인원 수 간격으로][:구할숫자개수만큼]
# 테스트 1 〉	통과 (0.01ms, 10.1MB)
# 테스트 2 〉	통과 (0.02ms, 10.3MB)
# 테스트 3 〉	통과 (0.02ms, 10MB)
# 테스트 4 〉	통과 (0.02ms, 10.2MB)
# 테스트 5 〉	통과 (0.82ms, 10MB)
# 테스트 6 〉	통과 (1.04ms, 10.1MB)
# 테스트 7 〉	통과 (0.59ms, 10.2MB)
# 테스트 8 〉	통과 (0.24ms, 10.1MB)
# 테스트 9 〉	통과 (0.25ms, 10.1MB)
# 테스트 10 〉	통과 (0.27ms, 10.1MB)
# 테스트 11 〉	통과 (0.21ms, 10.2MB)
# 테스트 12 〉	통과 (0.40ms, 10.2MB)
# 테스트 13 〉	통과 (0.22ms, 10.2MB)
# 테스트 14 〉	통과 (82.19ms, 10.4MB)
# 테스트 15 〉	통과 (144.81ms, 10.4MB)
# 테스트 16 〉	통과 (133.85ms, 10.4MB)
# 테스트 17 〉	통과 (5.12ms, 10.3MB)
# 테스트 18 〉	통과 (5.98ms, 10.1MB)
# 테스트 19 〉	통과 (1.04ms, 10.2MB)
# 테스트 20 〉	통과 (2.50ms, 10.1MB)
# 테스트 21 〉	통과 (24.53ms, 10.2MB)
# 테스트 22 〉	통과 (12.09ms, 10.1MB)
# 테스트 23 〉	통과 (27.28ms, 10.4MB)
# 테스트 24 〉	통과 (139.15ms, 10.4MB)
# 테스트 25 〉	통과 (178.70ms, 10.7MB)
# 테스트 26 〉	통과 (12.15ms, 10.1MB)


# 다른 사람 풀이 2
big = ["A","B","C","D","E","F"] # 16진수
def solution(n, t, m, p):
    a="0" # 게임에서 진행된 숫자
    i=0 # 순서
    #for i in range(t*m):
    while True:
        if len(a)>=t*m: # 구할 숫자보다 길면
            break # 끝
        b="" # 진수 변환해서 나온 수
        j=i
        while (j): # j가 0이 아닐 때
            if j%n>9: # 나머지가 9보다 클때 == 16진수다
                b=big[j%n-10]+b
            else:
                b=str(j%n)+b
            j=j//n # j는 몫으로 재할당
        a=a+b # 진법 변환한 수를 a에 더해줌
        i=i+1 # 순서 올림
    answer = a[p-1::m][:t] # 1번과 동일
    return answer
# 테스트 1 〉	통과 (0.01ms, 10.4MB)
# 테스트 2 〉	통과 (0.02ms, 10.1MB)
# 테스트 3 〉	통과 (0.02ms, 10.4MB)
# 테스트 4 〉	통과 (0.02ms, 10.3MB)
# 테스트 5 〉	통과 (0.14ms, 10.2MB)
# 테스트 6 〉	통과 (0.13ms, 10.2MB)
# 테스트 7 〉	통과 (0.15ms, 10.2MB)
# 테스트 8 〉	통과 (0.25ms, 10.2MB)
# 테스트 9 〉	통과 (0.14ms, 10.2MB)
# 테스트 10 〉	통과 (0.15ms, 10.3MB)
# 테스트 11 〉	통과 (0.14ms, 10.3MB)
# 테스트 12 〉	통과 (0.15ms, 10.4MB)
# 테스트 13 〉	통과 (0.14ms, 10.2MB)
# 테스트 14 〉	통과 (29.42ms, 10.3MB)
# 테스트 15 〉	통과 (27.41ms, 10.3MB)
# 테스트 16 〉	통과 (29.11ms, 10.3MB)
# 테스트 17 〉	통과 (2.14ms, 10.2MB)
# 테스트 18 〉	통과 (1.53ms, 10.4MB)
# 테스트 19 〉	통과 (0.40ms, 10.2MB)
# 테스트 20 〉	통과 (1.17ms, 10.3MB)
# 테스트 21 〉	통과 (7.49ms, 10.3MB)
# 테스트 22 〉	통과 (3.58ms, 10.3MB)
# 테스트 23 〉	통과 (10.09ms, 10.2MB)
# 테스트 24 〉	통과 (19.13ms, 10.2MB)
# 테스트 25 〉	통과 (13.44ms, 10.4MB)
# 테스트 26 〉	통과 (4.08ms, 10.2MB)


# print(solution(2, 4, 2, 1)) # 0111
# print(solution(16, 16, 2, 1)) # 02468ACE11111111
# print(solution(16, 16, 2, 2)) # 13579BDF01234567